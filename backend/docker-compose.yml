version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: mythic-warriors-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: mythic-warriors
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - mythic-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: mythic-warriors-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mythic-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mythic-warriors-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 5000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/mythic-warriors?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_jwt_key_change_this}
      JWT_EXPIRE: 7d
      CLIENT_URL: ${CLIENT_URL:-http://localhost:3000}
      ETHEREUM_RPC_URL: ${ETHEREUM_RPC_URL}
      ETHEREUM_CONTRACT_ADDRESS: ${ETHEREUM_CONTRACT_ADDRESS}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - mythic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (optional)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: mythic-warriors-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_WS_URL: ws://localhost:5000
    depends_on:
      - backend
    networks:
      - mythic-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  mythic-network:
    driver: bridge